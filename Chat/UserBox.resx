<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Status_Picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>